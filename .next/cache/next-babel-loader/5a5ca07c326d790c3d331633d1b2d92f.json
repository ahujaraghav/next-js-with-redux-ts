{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raghavahuja/playground/next_ts/src/hocs/ProtectedRoute.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\n\n/** Implement your own default route checking function */\nvar defaultCheck = function defaultCheck(state) {\n  // should return boolean\n  return state.user.role === 'admin';\n};\n/** Redirect url incase of authentication failure */\n\n\nvar REDIRECT_URL = \"/login\";\n/** Actual Logic, no need to change */\n\nexport default function (Component) {\n  var routeChecker = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultCheck;\n\n  var ProtectedRoute =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(ProtectedRoute, _React$Component);\n\n    function ProtectedRoute() {\n      _classCallCheck(this, ProtectedRoute);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(ProtectedRoute).apply(this, arguments));\n    }\n\n    _createClass(ProtectedRoute, [{\n      key: \"render\",\n      value: function render() {\n        return __jsx(Component, _extends({}, this.props.pageProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      }\n    }], [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(pageContext) {\n          var res, appProps;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  res = pageContext.res;\n\n                  if (!routeChecker(pageContext.reduxStore.getState())) {\n                    if (false) {\n                      res.writeHead(302, {\n                        Location: REDIRECT_URL\n                      });\n                      res.end();\n                    } else {\n                      Router.replace(REDIRECT_URL);\n                    }\n                  }\n\n                  appProps = {};\n\n                  if (!(typeof Component.getInitialProps === 'function')) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 6;\n                  return Component.getInitialProps(pageContext);\n\n                case 6:\n                  appProps = _context.sent;\n\n                case 7:\n                  return _context.abrupt(\"return\", {\n                    pageProps: _objectSpread({}, appProps)\n                  });\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    return ProtectedRoute;\n  }(React.Component);\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      state: state\n    };\n  };\n\n  return connect(mapStateToProps)(ProtectedRoute);\n}","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/src/hocs/ProtectedRoute.tsx"],"names":["React","Router","connect","defaultCheck","state","user","role","REDIRECT_URL","Component","routeChecker","ProtectedRoute","props","pageProps","pageContext","res","reduxStore","getState","writeHead","Location","end","replace","appProps","getInitialProps","mapStateToProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAaA;AACA,IAAMC,YAAwB,GAAG,SAA3BA,YAA2B,CAACC,KAAD,EAAW;AAC1C;AACA,SAAOA,KAAK,CAACC,IAAN,CAAWC,IAAX,KAAoB,OAA3B;AACD,CAHD;AAKA;;;AACA,IAAMC,YAAY,GAAG,QAArB;AAGA;;AACA,eAAe,UAAUC,SAAV,EAAiF;AAAA,MAAzCC,YAAyC,uEAAdN,YAAc;;AAAA,MAExFO,cAFwF;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAwBnF;AACP,eAAO,MAAC,SAAD,eAAe,KAAKC,KAAL,CAAWC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AA1B2F;AAAA;AAAA;AAAA;AAAA;AAAA,kDAI/DC,WAJ+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAKpFC,kBAAAA,GALoF,GAK9ED,WAAW,CAACC,GALkE;;AAM1F,sBAAI,CAACL,YAAY,CAACI,WAAW,CAACE,UAAZ,CAAuBC,QAAvB,EAAD,CAAjB,EAAsD;AACpD,+BAAmC;AACjCF,sBAAAA,GAAG,CAACG,SAAJ,CAAc,GAAd,EAAmB;AACjBC,wBAAAA,QAAQ,EAAEX;AADO,uBAAnB;AAGAO,sBAAAA,GAAG,CAACK,GAAJ;AACD,qBALD,MAKO;AACLlB,sBAAAA,MAAM,CAACmB,OAAP,CAAeb,YAAf;AACD;AACF;;AAEGc,kBAAAA,QAjBsF,GAiB3E,EAjB2E;;AAAA,wBAkBtF,OAAOb,SAAS,CAACc,eAAjB,KAAqC,UAlBiD;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAmBvEd,SAAS,CAACc,eAAV,CAA0BT,WAA1B,CAnBuE;;AAAA;AAmBxFQ,kBAAAA,QAnBwF;;AAAA;AAAA,mDAqBnF;AAAET,oBAAAA,SAAS,oBAAOS,QAAP;AAAX,mBArBmF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,IAEjErB,KAAK,CAACQ,SAF2D;;AA6B9F,MAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACnB,KAAD,EAAuB;AAC7C,WAAO;AAAEA,MAAAA,KAAK,EAALA;AAAF,KAAP;AACD,GAFD;;AAIA,SAAOF,OAAO,CAACqB,eAAD,CAAP,CAAyBb,cAAzB,CAAP;AACD","sourcesContent":["import React, { Component } from 'react'\nimport Router from 'next/router'\nimport { connect } from 'react-redux';\nimport { CustomPageContext } from './WithReduxStore';\nimport { StoreState } from '../redux/config';\nimport { NextComponentType } from 'next';\n\n/** Type Definations */\ninterface AppProps {\n  pageProps: {}\n}\n\nexport type RouteCheck = (state: StoreState) => boolean\n\n\n/** Implement your own default route checking function */\nconst defaultCheck: RouteCheck = (state) => {\n  // should return boolean\n  return state.user.role === 'admin'\n}\n\n/** Redirect url incase of authentication failure */\nconst REDIRECT_URL = \"/login\"\n\n\n/** Actual Logic, no need to change */\nexport default function (Component: NextComponentType, routeChecker: RouteCheck = defaultCheck) {\n\n  class ProtectedRoute extends React.Component<AppProps> {\n\n    static async getInitialProps(pageContext: CustomPageContext): Promise<AppProps> {\n      const res = pageContext.res\n      if (!routeChecker(pageContext.reduxStore.getState())) {\n        if (typeof window === 'undefined') {\n          res.writeHead(302, {\n            Location: REDIRECT_URL\n          });\n          res.end();\n        } else {\n          Router.replace(REDIRECT_URL)\n        }\n      }\n\n      let appProps = {}\n      if (typeof Component.getInitialProps === 'function') {\n        appProps = await Component.getInitialProps(pageContext)\n      }\n      return { pageProps: { ...appProps } }\n    }\n\n    render() {\n      return <Component {...this.props.pageProps} />\n    }\n  }\n\n  const mapStateToProps = (state: StoreState) => {\n    return { state }\n  }\n\n  return connect(mapStateToProps)(ProtectedRoute)\n}"]},"metadata":{},"sourceType":"module"}