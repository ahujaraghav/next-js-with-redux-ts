{"version":3,"file":"static/webpack/static/development/pages/login.js.9e5feec411217c36233f.hot-update.js","sources":["webpack:///./pages/login.tsx"],"sourcesContent":["import React, { ReactEventHandler, FormEvent, InputHTMLAttributes } from 'react'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Persistor } from 'redux-persist';\nimport protectedRoute from '../src/hocs/ProtectedRoute';\nimport { Dispatch } from 'redux'\nimport ActionTypes from '../src/redux/config/types';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\ninterface AppProps {\n  persistor: Persistor\n}\n\ninterface ReduxProps {\n  loginUser(role: string): void\n}\n\nclass Login extends React.Component<AppProps & ReduxProps> {\n  state = {\n    username: ''\n  }\n\n  constructor(props) {\n    super(props)\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' constructor')\n\n  }\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    this.props.loginUser(this.state.username)\n    Router.replace('/')\n  }\n\n  handleInputChange = (e: any) => {\n    e.persist()\n    this.setState({ username: e.target.value })\n  }\n\n\n  render() {\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' render')\n\n    return (\n\n      <div className=\"\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"mx-auto mt-5 w-50 border rounded p-2 p-md-5\">\n          <h6 className=\"text-center\">Login</h6>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Username</label>\n            <input value={this.state.username} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"johndoe@gmail.com\" />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Password</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"*********\" />\n          </div>\n          <div>\n            <span>username - role you want access for (superadmin, admin, member), <br></br>password - blank</span>\n          </div>\n          <button className=\"btn btn-sm float-right btn-primary\">Submit</button>\n\n        </form>\n      </div>\n\n    )\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    loginUser: (role: string): void => {\n      dispatch({ type: ActionTypes.LOGIN_USER, payload: { role } })\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAKA;AACA;AACA;AACA;AASA;;;;;AAKA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAHA;AADA;AACA;AAGA;AAOA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAXA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;AAFA;AAIA;AACA;;;AAaA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AApDA;AACA;AAuDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}