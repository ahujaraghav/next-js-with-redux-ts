{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raghavahuja/playground/next_ts/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ActionTypes from '../src/redux/config/types';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\nclass Login extends React.Component {\n  static async getInitialProps(appContext) {\n    console.log(false ? 'Client' : 'Server', ' init props'); // await new Promise((resolve) => {\n    //   setTimeout(resolve, 5000)\n    // })\n\n    return {\n      test: 100\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      username: ''\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.loginUser(this.state.username);\n      Router.replace('/');\n    });\n\n    _defineProperty(this, \"handleInputChange\", e => {\n      e.persist();\n      this.setState({\n        username: e.target.value\n      });\n    });\n\n    console.log(false ? 'Client' : 'Server', ' constructor');\n  }\n\n  render() {\n    console.log(false ? 'Client' : 'Server', ' render');\n    return __jsx(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"mx-auto mt-5 w-50 border rounded p-2 p-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"h6\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login\"), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Username\"), __jsx(\"input\", {\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      className: \"form-control\",\n      placeholder: \"johndoe@gmail.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Password\"), __jsx(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"*********\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-sm float-right btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: role => {\n      dispatch({\n        type: ActionTypes.LOGIN_USER,\n        payload: {\n          role\n        }\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/pages/login.tsx"],"names":["React","ActionTypes","connect","Router","Login","Component","getInitialProps","appContext","console","log","test","constructor","props","username","e","preventDefault","loginUser","state","replace","persist","setState","target","value","render","handleSubmit","handleInputChange","mapDispatchToProps","dispatch","role","type","LOGIN_USER","payload"],"mappings":"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","sourcesContent":["import React, { ReactEventHandler, FormEvent, InputHTMLAttributes } from 'react'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Persistor } from 'redux-persist';\nimport protectedRoute from '../src/hocs/ProtectedRoute';\nimport { Dispatch } from 'redux'\nimport ActionTypes from '../src/redux/config/types';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\ninterface AppProps {\n  persistor: Persistor\n}\n\ninterface ReduxProps {\n  loginUser(role: string): void\n}\n\nclass Login extends React.Component<AppProps & ReduxProps> {\n  static async getInitialProps(appContext) {\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' init props')\n    // await new Promise((resolve) => {\n    //   setTimeout(resolve, 5000)\n    // })\n    return { test: 100 }\n  }\n\n  state = {\n    username: ''\n  }\n\n  constructor(props) {\n    super(props)\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' constructor')\n\n  }\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    this.props.loginUser(this.state.username)\n    Router.replace('/')\n  }\n\n  handleInputChange = (e: any) => {\n    e.persist()\n    this.setState({ username: e.target.value })\n  }\n\n\n  render() {\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' render')\n\n    return (\n\n      <div className=\"\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"mx-auto mt-5 w-50 border rounded p-2 p-md-5\">\n          <h6 className=\"text-center\">Login</h6>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Username</label>\n            <input value={this.state.username} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"johndoe@gmail.com\" />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Password</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"*********\" />\n          </div>\n\n          <button className=\"btn btn-sm float-right btn-primary\">Submit</button>\n\n        </form>\n      </div>\n\n    )\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    loginUser: (role: string): void => {\n      dispatch({ type: ActionTypes.LOGIN_USER, payload: { role } })\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}