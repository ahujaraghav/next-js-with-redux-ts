{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport ActionTypes from \"../config/types\";\nconst initialState = {\n  isAuthenticated: false,\n  role: 'undefined',\n  total: 0\n};\n\nconst userReducer = (state = initialState, action) => {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case ActionTypes.LOGIN_USER:\n      {\n        return {\n          isAuthenticated: true,\n          role: payload.role,\n          total: 0\n        };\n      }\n\n    case ActionTypes.INCREMENT:\n      {\n        return _objectSpread({}, state, {\n          total: state.total + 1\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/src/redux/reducers/user.ts"],"names":["ActionTypes","initialState","isAuthenticated","role","total","userReducer","state","action","payload","type","LOGIN_USER","INCREMENT"],"mappings":";AAEA,OAAOA,WAAP,MAAwB,iBAAxB;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,IAAI,EAAE,WAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,WAAgC,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AACA,UAAQA,MAAM,CAACE,IAAf;AACE,SAAKT,WAAW,CAACU,UAAjB;AAA6B;AAC3B,eAAO;AAAER,UAAAA,eAAe,EAAE,IAAnB;AAAyBC,UAAAA,IAAI,EAAEK,OAAO,CAACL,IAAvC;AAA6CC,UAAAA,KAAK,EAAE;AAApD,SAAP;AACD;;AACD,SAAKJ,WAAW,CAACW,SAAjB;AAA4B;AAC1B,iCAAYL,KAAZ;AAAmBF,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAxC;AACD;;AACD;AACE,aAAOE,KAAP;AARJ;AAWD,CAbD;;AAeA,eAAeD,WAAf","sourcesContent":["import { Reducer } from \"react\";\nimport { Action } from \"redux\";\nimport ActionTypes from \"../config/types\";\nimport { CustomReducer } from \"../config\";\n\nexport interface User {\n  isAuthenticated: boolean,\n  role: string,\n  total: number\n}\n\n\n\nconst initialState = {\n  isAuthenticated: false,\n  role: 'undefined',\n  total: 0\n}\n\nconst userReducer: CustomReducer<User> = (state = initialState, action) => {\n  const { payload } = action\n  switch (action.type) {\n    case ActionTypes.LOGIN_USER: {\n      return { isAuthenticated: true, role: payload.role, total: 0 }\n    }\n    case ActionTypes.INCREMENT: {\n      return { ...state, total: state.total + 1 }\n    }\n    default:\n      return state\n  }\n\n}\n\nexport default userReducer"]},"metadata":{},"sourceType":"module"}