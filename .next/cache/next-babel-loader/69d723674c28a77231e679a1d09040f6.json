{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raghavahuja/playground/next_ts/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ActionTypes from '../src/redux/config/types';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      username: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.loginUser(_this.state.username);\n\n      Router.replace('/');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e) {\n      e.persist();\n\n      _this.setState({\n        username: e.target.value\n      });\n    });\n\n    console.log(true ? 'Client' : 'Server', ' constructor');\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      console.log(true ? 'Client' : 'Server', ' render');\n      return __jsx(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"mx-auto mt-5 w-50 border rounded p-2 p-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"h6\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Login\"), __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Username\"), __jsx(\"input\", {\n        value: this.state.username,\n        onChange: this.handleInputChange,\n        className: \"form-control\",\n        placeholder: \"johndoe@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        className: \"form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Password\"), __jsx(\"input\", {\n        className: \"form-control\",\n        type: \"password\",\n        placeholder: \"*********\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"username - role you want access for (superadmin, admin, member), \", __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \"password - blank\")), __jsx(\"button\", {\n        className: \"btn btn-sm float-right btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser(role) {\n      dispatch({\n        type: ActionTypes.LOGIN_USER,\n        payload: {\n          role: role\n        }\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/pages/login.tsx"],"names":["React","ActionTypes","connect","Router","Login","props","username","e","preventDefault","loginUser","state","replace","persist","setState","target","value","console","log","handleSubmit","handleInputChange","Component","mapDispatchToProps","dispatch","role","type","LOGIN_USER","payload"],"mappings":"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","sourcesContent":["import React, { ReactEventHandler, FormEvent, InputHTMLAttributes } from 'react'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Persistor } from 'redux-persist';\nimport protectedRoute from '../src/hocs/ProtectedRoute';\nimport { Dispatch } from 'redux'\nimport ActionTypes from '../src/redux/config/types';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\n\ninterface AppProps {\n  persistor: Persistor\n}\n\ninterface ReduxProps {\n  loginUser(role: string): void\n}\n\nclass Login extends React.Component<AppProps & ReduxProps> {\n  state = {\n    username: ''\n  }\n\n  constructor(props) {\n    super(props)\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' constructor')\n\n  }\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    this.props.loginUser(this.state.username)\n    Router.replace('/')\n  }\n\n  handleInputChange = (e: any) => {\n    e.persist()\n    this.setState({ username: e.target.value })\n  }\n\n\n  render() {\n    console.log(typeof window !== 'undefined' ? 'Client' : 'Server', ' render')\n\n    return (\n\n      <div className=\"\">\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"mx-auto mt-5 w-50 border rounded p-2 p-md-5\">\n          <h6 className=\"text-center\">Login</h6>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Username</label>\n            <input value={this.state.username} onChange={this.handleInputChange} className=\"form-control\" placeholder=\"johndoe@gmail.com\" />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\">Password</label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"*********\" />\n          </div>\n          <div>\n            <span>username - role you want access for (superadmin, admin, member), <br></br>password - blank</span>\n          </div>\n          <button className=\"btn btn-sm float-right btn-primary\">Submit</button>\n\n        </form>\n      </div>\n\n    )\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    loginUser: (role: string): void => {\n      dispatch({ type: ActionTypes.LOGIN_USER, payload: { role } })\n    }\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}