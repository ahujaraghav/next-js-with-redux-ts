{"ast":null,"code":"/*\nWraps instance of Node.js cookie implementation [1] to match API of Cookies.js\nbrowser library [2].\n\n[1] https://github.com/pillarjs/cookies\n[2] https://github.com/ScottHamper/Cookies\n*/\nfunction NodeCookiesWrapper(cookies) {\n  this.cookies = cookies;\n}\n\nNodeCookiesWrapper.prototype.get = function (key) {\n  key = encodeKey(key);\n  var encodedValue = this.cookies.get(key);\n\n  if (encodedValue) {\n    return decodeURIComponent(encodedValue);\n  }\n\n  return undefined;\n};\n\nNodeCookiesWrapper.prototype.set = function (key, value, options) {\n  key = encodeKey(key);\n  value = (value + '').replace(/[^!#$&-+\\--:<-\\[\\]-~]/g, encodeURIComponent); // this.cookies.set(key, value, options);\n};\n\nNodeCookiesWrapper.prototype.expire = function (key) {// this.set(key, undefined);\n};\n\nfunction encodeKey(key) {\n  key = key.replace(/[^#$&+\\^`|]/g, encodeURIComponent);\n  key = key.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n  return key;\n}\n\nexport default NodeCookiesWrapper;","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/src/utils/helpers/nodeCookieWrapper.js"],"names":["NodeCookiesWrapper","cookies","prototype","get","key","encodeKey","encodedValue","decodeURIComponent","undefined","set","value","options","replace","encodeURIComponent","expire"],"mappings":"AAAA;;;;;;;AAQA,SAASA,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,OAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDD,kBAAkB,CAACE,SAAnB,CAA6BC,GAA7B,GAAmC,UAAUC,GAAV,EAAe;AAChDA,EAAAA,GAAG,GAAGC,SAAS,CAACD,GAAD,CAAf;AACA,MAAIE,YAAY,GAAG,KAAKL,OAAL,CAAaE,GAAb,CAAiBC,GAAjB,CAAnB;;AACA,MAAIE,YAAJ,EAAkB;AAChB,WAAOC,kBAAkB,CAACD,YAAD,CAAzB;AACD;;AACD,SAAOE,SAAP;AACD,CAPD;;AASAR,kBAAkB,CAACE,SAAnB,CAA6BO,GAA7B,GAAmC,UAAUL,GAAV,EAAeM,KAAf,EAAsBC,OAAtB,EAA+B;AAChEP,EAAAA,GAAG,GAAGC,SAAS,CAACD,GAAD,CAAf;AACAM,EAAAA,KAAK,GAAG,CAACA,KAAK,GAAG,EAAT,EAAaE,OAAb,CAAqB,wBAArB,EAA+CC,kBAA/C,CAAR,CAFgE,CAGhE;AACD,CAJD;;AAMAb,kBAAkB,CAACE,SAAnB,CAA6BY,MAA7B,GAAsC,UAAUV,GAAV,EAAe,CACnD;AACD,CAFD;;AAIA,SAASC,SAAT,CAAmBD,GAAnB,EAAwB;AACtBA,EAAAA,GAAG,GAAGA,GAAG,CAACQ,OAAJ,CAAY,cAAZ,EAA4BC,kBAA5B,CAAN;AACAT,EAAAA,GAAG,GAAGA,GAAG,CAACQ,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,EAA0BA,OAA1B,CAAkC,KAAlC,EAAyC,KAAzC,CAAN;AACA,SAAOR,GAAP;AACD;;AAED,eAAeJ,kBAAf","sourcesContent":["/*\nWraps instance of Node.js cookie implementation [1] to match API of Cookies.js\nbrowser library [2].\n\n[1] https://github.com/pillarjs/cookies\n[2] https://github.com/ScottHamper/Cookies\n*/\n\nfunction NodeCookiesWrapper(cookies) {\n  this.cookies = cookies;\n}\n\nNodeCookiesWrapper.prototype.get = function (key) {\n  key = encodeKey(key);\n  var encodedValue = this.cookies.get(key);\n  if (encodedValue) {\n    return decodeURIComponent(encodedValue);\n  }\n  return undefined;\n}\n\nNodeCookiesWrapper.prototype.set = function (key, value, options) {\n  key = encodeKey(key);\n  value = (value + '').replace(/[^!#$&-+\\--:<-\\[\\]-~]/g, encodeURIComponent);\n  // this.cookies.set(key, value, options);\n}\n\nNodeCookiesWrapper.prototype.expire = function (key) {\n  // this.set(key, undefined);\n}\n\nfunction encodeKey(key) {\n  key = key.replace(/[^#$&+\\^`|]/g, encodeURIComponent);\n  key = key.replace(/\\(/g, '%28').replace(/\\)/g, '%29');\n  return key;\n}\n\nexport default NodeCookiesWrapper;\n"]},"metadata":{},"sourceType":"module"}