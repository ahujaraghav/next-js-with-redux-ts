{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport DefaultStorage from 'redux-persist/lib/storage';\nimport userReducer from '../reducers/user';\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer from '../reducers/data';\nexport function initializeStore(req, res) {\n  // pass to server\n  var persistCookieConfig = {\n    key: 'root',\n    storage: CustomCookieStorage(req, res) // used in client local storage\n\n  };\n  var persistLocalConfig = {\n    key: 'local',\n    storage: DefaultStorage\n  };\n  var cookieConfigReducer = persistReducer(persistCookieConfig, combineReducers({\n    user: userReducer,\n    dataCookie: dataReducer\n  }));\n  var localConfigReducer = persistReducer(persistLocalConfig, combineReducers({\n    dataLocal: dataReducer\n  }));\n  var store = createStore( // combineReducers<StoreState>({ user: userReducer })\n  rootReducer);\n  var persistor = persistStore(store, {});\n  return {\n    store: store,\n    persistor: persistor\n  };\n}","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/src/redux/config/index.ts"],"names":["createStore","combineReducers","persistStore","persistReducer","DefaultStorage","userReducer","CustomCookieStorage","dataReducer","initializeStore","req","res","persistCookieConfig","key","storage","persistLocalConfig","cookieConfigReducer","user","dataCookie","localConfigReducer","dataLocal","store","rootReducer","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAAoD,OAApD;AACA,SAASC,YAAT,EAAkCC,cAAlC,QAAwD,eAAxD;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,WAAP,MAAkC,kBAAlC;AAGA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,WAAP,MAAkC,kBAAlC;AAUA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAAoCC,GAApC,EAAuF;AAE5F;AACA,MAAMC,mBAAmB,GAAG;AAC1BC,IAAAA,GAAG,EAAE,MADqB;AAE1BC,IAAAA,OAAO,EAAEP,mBAAmB,CAACG,GAAD,EAAMC,GAAN,CAFF,CAM5B;;AAN4B,GAA5B;AAOA,MAAMI,kBAAkB,GAAG;AACzBF,IAAAA,GAAG,EAAE,OADoB;AAEzBC,IAAAA,OAAO,EAAET;AAFgB,GAA3B;AAKA,MAAMW,mBAAmB,GAAGZ,cAAc,CACxCQ,mBADwC,EAExCV,eAAe,CACb;AACEe,IAAAA,IAAI,EAAEX,WADR;AAEEY,IAAAA,UAAU,EAAEV;AAFd,GADa,CAFyB,CAA1C;AAUA,MAAMW,kBAAkB,GAAGf,cAAc,CACvCW,kBADuC,EAEvCb,eAAe,CAAC;AACdkB,IAAAA,SAAS,EAAEZ;AADG,GAAD,CAFwB,CAAzC;AAOA,MAAMa,KAAY,GAAGpB,WAAW,EAC9B;AACAqB,EAAAA,WAF8B,CAAhC;AAIA,MAAMC,SAAS,GAAGpB,YAAY,CAACkB,KAAD,EAAQ,EAAR,CAA9B;AAEA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD","sourcesContent":["import { createStore, combineReducers, Store } from 'redux'\nimport { persistStore, Persistor, persistReducer } from 'redux-persist'\nimport DefaultStorage from 'redux-persist/lib/storage'\nimport userReducer, { User } from '../reducers/user';\n\nimport ActionTypes from './types';\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer, { Data } from '../reducers/data';\n\nexport interface StoreState {\n  user: User,\n  dataLocal: Data,\n  dataCookie: Data\n}\n\nexport type CustomReducer<T> = (state: T, action: { type: ActionTypes, payload: any }) => T\n\nexport function initializeStore(req?: any, res?: any): { store: Store, persistor: Persistor } {\n\n  // pass to server\n  const persistCookieConfig = {\n    key: 'root',\n    storage: CustomCookieStorage(req, res)\n  }\n\n\n  // used in client local storage\n  const persistLocalConfig = {\n    key: 'local',\n    storage: DefaultStorage\n  }\n\n  const cookieConfigReducer = persistReducer(\n    persistCookieConfig,\n    combineReducers(\n      {\n        user: userReducer,\n        dataCookie: dataReducer\n      }\n    )\n  )\n\n  const localConfigReducer = persistReducer(\n    persistLocalConfig,\n    combineReducers({\n      dataLocal: dataReducer,\n    })\n  )\n\n  const store: Store = createStore(\n    // combineReducers<StoreState>({ user: userReducer })\n    rootReducer\n  )\n  const persistor = persistStore(store, {})\n\n  return { store, persistor }\n}\n\n"]},"metadata":{},"sourceType":"module"}