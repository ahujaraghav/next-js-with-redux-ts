{"ast":null,"code":"import DefaultStorage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer from './data';\nimport userReducer from '../reducers/user';\n\n// pass to server\nvar persistCookieConfig = function persistCookieConfig(key) {\n  return {\n    key: key,\n    storage: CustomCookieStorage(req, res)\n  };\n}; // used in client local storage\n\n\nvar persistLocalConfig = function persistLocalConfig(key) {\n  return {\n    key: key,\n    storage: DefaultStorage\n  };\n};\n\nvar rootReducer = combineReducers({\n  user: persistReducer(persistCookieConfig('user'), userReducer),\n  dataCookie: persistReducer(persistCookieConfig('data'), dataReducer),\n  dataLocal: persistReducer(persistLocalConfig('data-local'), dataReducer),\n  data: dataReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/raghavahuja/playground/next_ts/src/redux/reducers/index.ts"],"names":["DefaultStorage","persistReducer","CustomCookieStorage","dataReducer","userReducer","persistCookieConfig","key","storage","req","res","persistLocalConfig","rootReducer","combineReducers","user","dataCookie","dataLocal","data"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,SAAkCC,cAAlC,QAAwD,eAAxD;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,WAAP,MAAkC,QAAlC;AAEA,OAAOC,WAAP,MAAkC,kBAAlC;;AAcA;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD;AAAA,SAAkB;AAC5CA,IAAAA,GAAG,EAAHA,GAD4C;AAE5CC,IAAAA,OAAO,EAAEL,mBAAmB,CAACM,GAAD,EAAMC,GAAN;AAFgB,GAAlB;AAAA,CAA5B,C,CAMA;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,GAAD;AAAA,SAAkB;AAC3CA,IAAAA,GAAG,EAAHA,GAD2C;AAE3CC,IAAAA,OAAO,EAAEP;AAFkC,GAAlB;AAAA,CAA3B;;AAKA,IAAMW,WAAW,GAAGC,eAAe,CACjC;AACEC,EAAAA,IAAI,EAAEZ,cAAc,CAACI,mBAAmB,CAAC,MAAD,CAApB,EAA8BD,WAA9B,CADtB;AAEEU,EAAAA,UAAU,EAAEb,cAAc,CAACI,mBAAmB,CAAC,MAAD,CAApB,EAA8BF,WAA9B,CAF5B;AAGEY,EAAAA,SAAS,EAAEd,cAAc,CAACS,kBAAkB,CAAC,YAAD,CAAnB,EAAmCP,WAAnC,CAH3B;AAIEa,EAAAA,IAAI,EAAEb;AAJR,CADiC,CAAnC;AASA,eAAeQ,WAAf","sourcesContent":["import DefaultStorage from 'redux-persist/lib/storage'\nimport { persistStore, Persistor, persistReducer } from 'redux-persist'\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer, { Data } from './data';\n\nimport userReducer, { User } from '../reducers/user';\nimport ActionTypes from '../config/types';\n\n\n\nexport interface StoreState {\n  user: User,\n  dataLocal: Data,\n  dataCookie: Data,\n  data: Data\n}\n\nexport type CustomReducer<T> = (state: T, action: { type: ActionTypes, payload: any }) => T\n\n// pass to server\nconst persistCookieConfig = (key: string) => ({\n  key,\n  storage: CustomCookieStorage(req, res)\n})\n\n\n// used in client local storage\nconst persistLocalConfig = (key: string) => ({\n  key,\n  storage: DefaultStorage\n})\n\nconst rootReducer = combineReducers(\n  {\n    user: persistReducer(persistCookieConfig('user'), userReducer),\n    dataCookie: persistReducer(persistCookieConfig('data'), dataReducer),\n    dataLocal: persistReducer(persistLocalConfig('data-local'), dataReducer),\n    data: dataReducer\n  }\n)\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}