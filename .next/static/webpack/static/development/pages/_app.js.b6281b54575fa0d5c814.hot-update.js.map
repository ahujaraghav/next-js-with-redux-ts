{"version":3,"file":"static/webpack/static/development/pages/_app.js.b6281b54575fa0d5c814.hot-update.js","sources":["webpack:///./src/redux/config/index.ts"],"sourcesContent":["import { createStore, combineReducers, Store } from 'redux'\nimport { persistStore, Persistor, persistReducer } from 'redux-persist'\nimport DefaultStorage from 'redux-persist/lib/storage'\nimport userReducer, { User } from '../reducers/user';\n\nimport ActionTypes from './types';\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer, { Data } from '../reducers/data';\n\nexport interface StoreState {\n  user: User,\n  dataLocal: Data,\n  dataCookie: Data\n}\n\nexport type CustomReducer<T> = (state: T, action: { type: ActionTypes, payload: any }) => T\n\nexport function initializeStore(req?: any, res?: any): { store: Store, persistor: Persistor } {\n\n  // pass to server\n  const persistCookieConfig = {\n    key: 'root',\n    storage: CustomCookieStorage(req, res)\n  }\n\n  const persistCookieConfig1 = {\n    key: 'root1',\n    storage: CustomCookieStorage(req, res)\n  }\n\n  // used in client local storage\n  const localStorageConfig = {\n    key: 'local',\n    storage: DefaultStorage\n  }\n\n  const rootReducer = combineReducers<StoreState>(\n    {\n      user: persistReducer(persistCookieConfig, userReducer),\n      dataLocal: persistReducer(localStorageConfig, dataReducer),\n      dataCookie: persistReducer(persistCookieConfig1, dataReducer)\n      // data: dataReducer\n    }\n  )\n\n  const store: Store = createStore(\n    // combineReducers<StoreState>({ user: userReducer })\n    rootReducer\n  )\n  const persistor = persistStore(store, {})\n\n  return { store, persistor }\n}\n\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAUA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}