{"version":3,"file":"static/webpack/static/development/pages/_app.js.56c03eca682522d13bc4.hot-update.js","sources":["webpack:///./src/redux/config/index.ts"],"sourcesContent":["import { createStore, combineReducers, Store } from 'redux'\nimport { persistStore, Persistor, persistReducer } from 'redux-persist'\nimport DefaultStorage from 'redux-persist/lib/storage'\nimport userReducer, { User } from '../reducers/user';\n\nimport ActionTypes from './types';\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer, { Data } from '../reducers/data';\n\nexport interface StoreState {\n  user: User,\n  dataLocal: Data,\n  dataCookie: Data\n}\n\nexport type CustomReducer<T> = (state: T, action: { type: ActionTypes, payload: any }) => T\n\nexport function initializeStore(req?: any, res?: any): { store: Store, persistor: Persistor } {\n\n  // pass to server\n  const persistCookieConfig = {\n    key: 'root',\n    storage: CustomCookieStorage(req, res)\n  }\n\n\n  // used in client local storage\n  const localStorageConfig = {\n    key: 'local',\n    storage: DefaultStorage\n  }\n\n  const cookieConfigReducer = persistReducer(\n    persistCookieConfig,\n    combineReducers(\n      {\n        user: userReducer,\n        dataLocal: dataReducer,\n        dataCookie: dataReducer\n      }\n    )\n\n  )\n\n  const store: Store = createStore(\n    // combineReducers<StoreState>({ user: userReducer })\n    rootReducer\n  )\n  const persistor = persistStore(store, {})\n\n  return { store, persistor }\n}\n\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAFA;AAKA;AAIA;AACA;AACA;AAHA;AASA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}