{"version":3,"file":"static/webpack/static/development/pages/_app.js.323cecaca314a5aa3c9a.hot-update.js","sources":["webpack:///./src/redux/config/index.ts","webpack:///./src/redux/reducers/index.ts"],"sourcesContent":["import { createStore, combineReducers, Store } from 'redux'\nimport { persistStore, Persistor } from 'redux-persist'\n\nimport rootReducer from '../reducers'\n\n\n\nexport function initializeStore(req?: any, res?: any): { store: Store, persistor: Persistor } {  \n\n  const store: Store = createStore(\n    // combineReducers<StoreState>({ user: userReducer })\n    rootReducer\n  )\n  const persistor = persistStore(store, {})\n\n  return { store, persistor }\n}\n\n","import DefaultStorage from 'redux-persist/lib/storage'\nimport { persistStore, Persistor, persistReducer } from 'redux-persist'\nimport CustomCookieStorage from '../../utils/helpers/customCookieStorage';\nimport dataReducer, { Data } from './data';\n\nimport userReducer, { User } from '../reducers/user';\nimport ActionTypes from '../config/types';\n\n\n\nexport interface StoreState {\n  user: User,\n  dataLocal: Data,\n  dataCookie: Data,\n  data: Data\n}\n\nexport type CustomReducer<T> = (state: T, action: { type: ActionTypes, payload: any }) => T\n\n// pass to server\nconst persistCookieConfig = (key: string) => ({\n  key,\n  storage: CustomCookieStorage(req, res)\n})\n\n\n// used in client local storage\nconst persistLocalConfig = (key: string) => ({\n  key,\n  storage: DefaultStorage\n})\n\nconst rootReducer = combineReducers(\n  {\n    user: persistReducer(persistCookieConfig('user'), userReducer),\n    dataCookie: persistReducer(persistCookieConfig('data'), dataReducer),\n    dataLocal: persistReducer(persistLocalConfig('data-local'), dataReducer),\n    data: dataReducer\n  }\n)\n\nexport default rootReducer"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAJA;AAQA;;;;A","sourceRoot":""}